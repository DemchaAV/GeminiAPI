package org.gemini.core.client.request_response.response.candidate;

import com.fasterxml.jackson.annotation.JsonInclude;
import lombok.Builder;
import org.gemini.core.client.request_response.content.Content;
import org.gemini.core.client.request_response.response.candidate.citation_metadata.CitationMetadata;
import org.gemini.core.client.request_response.response.candidate.logprobs_result.LogprobsResult;
import org.gemini.core.client.request_response.response.candidate.safety_rating.SafetyRating;

import java.util.List;

/**
 * A candidate response generated by the model
 */
@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record Candidate(
        /**
         * The content of the response.
         */
        Content content,

        /**
         * The reason why the model stopped generating tokens.
         * If empty, the model has not stopped generating the tokens.
         */
        FinishReason finishReason,

        /**
         * Safety ratings for different harm categories.
         */
        List<SafetyRating> safetyRatings,

        /**
         * Metadata about citations in the response.
         */
        CitationMetadata citationMetadata,

        /**
         * Average log probability of the candidate.
         */
        Double avgLogprobs,

        /**
         * Returns the top candidate tokens and the actual chosen tokens at each step.
         */
        LogprobsResult logprobsResult
) {
}
